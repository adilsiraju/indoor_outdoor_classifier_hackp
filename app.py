# AUTOGENERATED! DO NOT EDIT! File to edit: indoorload.ipynb.

# %% auto 0
__all__ = ['learn', 'intf', 'classify_image']

# %% indoorload.ipynb 1
import pickle  # or import joblib
from fastai.vision.all import *
import gradio as gr

# %% indoorload.ipynb 3
learn = load_learner('models/indoorclassifier.pkl')

# %% indoorload.ipynb 6
def classify_image(img):
    img = PILImage.create(img)
    pred_class, pred_idx, probs = learn.predict(img)
    
    # Corrected: Create dict mapping class names to float probabilities
    return dict(zip(learn.dls.vocab, map(float, probs)))

# %% indoorload.ipynb 8
# examples = ['sunny.jpg','rainy.jpg']

intf = gr.Interface(
    fn=classify_image,
    inputs=gr.Image(),
    outputs=gr.Label(), 
    # examples=examples,
    title="Indoor Style Classifier",
    description="Upload or choose an image to classify wether its Indoor or Outdoor"
)

intf.launch()
